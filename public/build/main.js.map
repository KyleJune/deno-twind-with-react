{
  "version": 3,
  "sources": ["../../env.ts", "../../client/twind.ts", "../../client/lazy.ts", "../../client/routes/index.tsx", "../../client/app.tsx", "../../client/main.tsx"],
  "sourcesContent": ["export const isServer = \"Deno\" in globalThis;\nexport const isBrowser = !isServer;\n\ninterface EnvironmentWindow extends Window {\n  env?: {\n    [key: string]: string;\n  };\n}\nexport const getEnv = (\n  key: string,\n) => (isServer ? Deno.env.get(key) : (window as EnvironmentWindow).env?.[key]);\nexport const isProduction = () => getEnv(\"APP_ENV\") === \"production\";\n", "import {\n  installTwind,\n  presetAutoprefix,\n  presetTailwind,\n} from \"../deps_client.ts\";\nimport { isProduction } from \"../env.ts\";\n\nexport const tw = installTwind({\n  presets: [presetAutoprefix(), presetTailwind()],\n}, isProduction());\n", "import { path } from \"../deps_client.ts\";\nimport { isBrowser } from \"../env.ts\";\nimport { lazy } from \"react\";\n\n/** Map of pre-loaded lazy modules. This is only used on the server. */\n// deno-lint-ignore no-explicit-any\nconst lazyMap = new Map<string, React.ComponentType<any>>();\n\nexport const clientDir = path.dirname(import.meta.url);\nconsole.log(clientDir);\n\n/** Factory that generates a wrapper around `React.lazy` that supports static imports on the server. */\nexport const lazyFactory = (moduleUrl: string) => {\n  const dir = isBrowser\n    ? \"\"\n    : path.dirname(path.relative(clientDir, moduleUrl));\n  return <T>(\n    relativePath: string,\n    dynamicFactory: () => Promise<{ default: React.ComponentType<T> }>,\n  ) =>\n    lazy(\n      isBrowser ? dynamicFactory : async () => {\n        const pathFromClient = path.join(dir, relativePath);\n        if (!lazyMap.has(pathFromClient)) {\n          console.log(\"Loaded modules\", [...lazyMap.keys()]);\n          throw new Error(\n            `module (${pathFromClient}) not pre-loaded`,\n          );\n        }\n        const Component = lazyMap.get(pathFromClient)!;\n        return await Promise.resolve({ default: Component });\n      },\n    );\n};\n\nexport const registerLazyFactory = (relativeDir: string) => {\n  // deno-lint-ignore no-explicit-any\n  return (relativePath: string, Component: React.ComponentType<any>) => {\n    const pathFromClient = path.join(relativeDir, relativePath);\n    lazyMap.set(pathFromClient, Component);\n  };\n};\n", "import { Helmet, reactRouter, twind } from \"../../deps_client.ts\";\nimport { Suspense } from \"react\";\n\nconst { Outlet, Link } = reactRouter;\nconst { cx } = twind;\n\nconst linkClass = cx(\n  \"transition-all duration-300 opacity-75 hover:(opacity-100 text-blue-500)\",\n);\n\nexport const Loading = () => (\n  <div className=\"animate-pulse\">\n    <Helmet>\n      <title>Loading...</title>\n    </Helmet>\n    <h1>Loading...</h1>\n  </div>\n);\n\nexport const Layout = () => (\n  <>\n    <Suspense fallback={<Loading />}>\n      <Outlet />\n    </Suspense>\n  </>\n);\n\nexport function Index() {\n  const links = [\n    {\n      href: \"https://remix.run/tutorials/blog\",\n      text: \"15m Quickstart Blog Tutorial\",\n    },\n    {\n      href: \"https://remix.run/tutorials/jokes\",\n      text: \"Deep Dive Jokes App Tutorial\",\n    },\n    {\n      href: \"https://remix.run/docs\",\n      text: \"Remix Docs\",\n    },\n    {\n      href: \"https://twind.style/\",\n      text: \"Twind Docs\",\n    },\n  ];\n\n  return (\n    <main className=\"py-16 px-4 max-w-screen-md mx-auto w-full\">\n      <h1 className=\"text-4xl font-light mb-6\">\n        Welcome to Remix + Twind \uD83D\uDCBF\uD83D\uDE80\n      </h1>\n      <ul className=\"list-disc grid gap-2\">\n        {links.map((link) => (\n          <li key={link.href}>\n            <a\n              href={link.href}\n              className={linkClass}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {link.text}\n            </a>\n          </li>\n        ))}\n        <li>\n          <Link to=\"/anything\" className={linkClass}>\n            Some other route\n          </Link>\n        </li>\n      </ul>\n    </main>\n  );\n}\n", "import { Helmet, reactRouter } from \"../deps_client.ts\";\nimport { lazyFactory } from \"./lazy.ts\";\nimport { Index, Layout } from \"./routes/index.tsx\";\nconst { Routes, Route } = reactRouter;\n\nconst lazy = lazyFactory(import.meta.url);\nconst Anything = lazy(\n  \"./routes/anything.tsx\",\n  () => import(\"./routes/anything.tsx\"),\n);\n\nexport function App() {\n  return (\n    <>\n      <Helmet\n        htmlAttributes={{ lang: \"en\" }}\n        defaultTitle=\"Example\"\n        titleTemplate=\"Example | %s\"\n      >\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      </Helmet>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Index />} />\n          <Route path=\"anything\" element={<Anything />} />\n          <Route path=\"*\" element={<h1>Not found!</h1>} />\n        </Route>\n      </Routes>\n    </>\n  );\n}\n", "// for the side effect of creating the global twind instance\nimport \"./twind.ts\";\n\nimport { startTransition, StrictMode } from \"react\";\nimport { HelmetProvider, hydrateRoot, reactRouter } from \"../deps_client.ts\";\nimport { App } from \"./app.tsx\";\nconst { BrowserRouter } = reactRouter;\n\nconst BrowserApp = () => (\n  <HelmetProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </HelmetProvider>\n);\n\nconst hydrate = () =>\n  startTransition(() => {\n    hydrateRoot(\n      document.body,\n      <StrictMode>\n        <BrowserApp />\n      </StrictMode>,\n    );\n  });\n\nif (requestIdleCallback) {\n  requestIdleCallback(hydrate);\n} else {\n  // Safari doesn't support requestIdleCallback\n  // https://caniuse.com/requestidlecallback\n  setTimeout(hydrate, 1);\n}\n"],
  "mappings": "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",
  "names": ["isServer", "isBrowser", "getEnv", "key", "isProduction", "tw", "t", "u", "B", "isProduction", "lazyMap", "clientDir", "mod_exports", "lazyFactory", "moduleUrl", "dir", "isBrowser", "relativePath", "dynamicFactory", "$e", "pathFromClient", "Component", "Outlet", "Link", "react_router_dom_6_6_1_target_deno_pin_v99_deps_react_18_2_0_react_dom_18_2_exports", "cx", "core_1_1_exports", "linkClass", "Loading", "jsxDEV", "q", "Layout", "Fragment", "he", "Index", "link", "Routes", "Route", "react_router_dom_6_6_1_target_deno_pin_v99_deps_react_18_2_0_react_dom_18_2_exports", "lazy", "lazyFactory", "Anything", "App", "jsxDEV", "Fragment", "q", "Layout", "Index", "BrowserRouter", "react_router_dom_6_6_1_target_deno_pin_v99_deps_react_18_2_0_react_dom_18_2_exports", "BrowserApp", "jsxDEV", "w", "App", "hydrate", "Oe", "jf", "me"]
}
